
SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

CREATE EXTENSION IF NOT EXISTS "pgsodium" WITH SCHEMA "pgsodium";

CREATE SCHEMA IF NOT EXISTS "sales";

ALTER SCHEMA "sales" OWNER TO "postgres";

CREATE SCHEMA IF NOT EXISTS "test1";

ALTER SCHEMA "test1" OWNER TO "postgres";

CREATE SCHEMA IF NOT EXISTS "test2";

ALTER SCHEMA "test2" OWNER TO "postgres";

CREATE SCHEMA IF NOT EXISTS "test_schema3";

ALTER SCHEMA "test_schema3" OWNER TO "postgres";

CREATE SCHEMA IF NOT EXISTS "test_scr1";

ALTER SCHEMA "test_scr1" OWNER TO "postgres";

CREATE SCHEMA IF NOT EXISTS "test_scr2";

ALTER SCHEMA "test_scr2" OWNER TO "postgres";

CREATE SCHEMA IF NOT EXISTS "test_scr3";

ALTER SCHEMA "test_scr3" OWNER TO "postgres";

CREATE SCHEMA IF NOT EXISTS "test_scr4";

ALTER SCHEMA "test_scr4" OWNER TO "postgres";

CREATE SCHEMA IF NOT EXISTS "test_scr5";

ALTER SCHEMA "test_scr5" OWNER TO "postgres";

CREATE SCHEMA IF NOT EXISTS "users_auth";

ALTER SCHEMA "users_auth" OWNER TO "postgres";

CREATE EXTENSION IF NOT EXISTS "pg_graphql" WITH SCHEMA "graphql";

CREATE EXTENSION IF NOT EXISTS "pg_stat_statements" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "pgcrypto" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "pgjwt" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "supabase_vault" WITH SCHEMA "vault";

CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA "extensions";

CREATE TYPE "public"."Task Status" AS ENUM (
    'BACKLOG',
    'CANCELLED',
    'IN_PROGRESS',
    'TODO',
    'FINISHED'
);

ALTER TYPE "public"."Task Status" OWNER TO "postgres";

CREATE OR REPLACE FUNCTION "public"."create_new_sale"("sale" "jsonb") RETURNS "void"
    LANGUAGE "plpgsql"
    AS $$DECLARE
    cust_id INT;
    fin_id INT;
    trade_id INT;
BEGIN
    -- Insert into customers table, save ID
    INSERT INTO "Customers" ("Name", "City") VALUES(sale->>'CustomerName', sale->>'CustomerCity')
    RETURNING id into cust_id;

    -- Insert into the first table
    INSERT INTO "Sales" (
      "StockNumber", 
      "VehicleMake", 
      "ActualCashValue", 
      "GrossProfit", 
      "FinAndInsurance",
      "NewSale",
      "Holdback",
      "LotPack",
      "DaysInStock",
      "DealerCost",
      "ROI",
      "Total",
      "EmployeeID",
      "CustomerID",
      "FinancingID",
      "TradeInID"
    ) 
    VALUES (
      sale->>'StockNumber',
      sale->>'VehicleMake', 
      (sale->>'ActualCashValue')::numeric,
      (sale->>'GrossProfit')::numeric,    
      (sale->>'FinAndInsurance')::numeric,
      false,
      null,
      (sale->>'LotPack')::numeric,
      (sale->>'DaysInStock')::numeric,
      (sale->>'DealerCost')::numeric,
      (sale->>'ROI')::numeric, 
      (sale->>'Total')::numeric,
      (sale->>'EmployeeID')::uuid,
      cust_id,
      1,
      null
      );

    -- Insert into the third table
    INSERT INTO "TradeIns" ("Trade", "ActualCashValue") VALUES --(sale->>'Trade', sale->>'TradeValue');
    ('test', 0);
    -- Commit the transaction
END;$$;

ALTER FUNCTION "public"."create_new_sale"("sale" "jsonb") OWNER TO "postgres";

CREATE OR REPLACE FUNCTION "public"."handle_new_user"() RETURNS "trigger"
    LANGUAGE "plpgsql" SECURITY DEFINER
    AS $$
begin
  INSERT into public."Employees" (id, "Email", "Name", "EmployeeNumber", "Role")
  values (
    new.id,
    new.email,
    new.raw_user_meta_data->>'Name',
    new.raw_user_meta_data->>'EmployeeNumber',
    (new.raw_user_meta_data->>'Role')::integer
  );
  return new;
end;
$$;

ALTER FUNCTION "public"."handle_new_user"() OWNER TO "postgres";

SET default_tablespace = '';

SET default_table_access_method = "heap";

CREATE TABLE IF NOT EXISTS "public"."Customers" (
    "id" integer NOT NULL,
    "Name" character varying(255) NOT NULL,
    "City" character varying(255) NOT NULL
);

ALTER TABLE "public"."Customers" OWNER TO "postgres";

ALTER TABLE "public"."Customers" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."Customers_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."Employees" (
    "id" "uuid" NOT NULL,
    "Name" "text" NOT NULL,
    "EmployeeNumber" "text" NOT NULL,
    "Role" integer NOT NULL,
    "Email" "text" NOT NULL,
    "Avatar" "text" DEFAULT '01.png'::"text" NOT NULL
);

ALTER TABLE "public"."Employees" OWNER TO "postgres";

CREATE TABLE IF NOT EXISTS "public"."Financing" (
    "id" integer NOT NULL,
    "Method" "text" NOT NULL
);

ALTER TABLE "public"."Financing" OWNER TO "postgres";

ALTER TABLE "public"."Financing" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."Financing_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."MonthlySales" (
    "id" integer NOT NULL,
    "TimePeriod" timestamp without time zone NOT NULL,
    "GrossProfit" numeric(10,2) NOT NULL,
    "FinAndInsurance" numeric(10,2) NOT NULL,
    "Holdback" numeric(10,2) NOT NULL,
    "Total" numeric(10,2) NOT NULL
);

ALTER TABLE "public"."MonthlySales" OWNER TO "postgres";

ALTER TABLE "public"."MonthlySales" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."MonthlySales_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."Notifications" (
    "id" bigint NOT NULL,
    "Sale" integer NOT NULL,
    "Employee" "uuid" NOT NULL
);

ALTER TABLE "public"."Notifications" OWNER TO "postgres";

ALTER TABLE "public"."Notifications" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."Notifications_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."ReferencePages" (
    "id" bigint NOT NULL,
    "pagename" character varying DEFAULT ''::character varying NOT NULL,
    "pagebody" character varying DEFAULT ''::character varying NOT NULL
);

ALTER TABLE "public"."ReferencePages" OWNER TO "postgres";

ALTER TABLE "public"."ReferencePages" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."ReferencePages_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."Roles" (
    "id" integer NOT NULL,
    "RoleName" "text" NOT NULL,
    "ReadPermission" boolean DEFAULT false NOT NULL,
    "WritePermission" boolean DEFAULT false NOT NULL,
    "ModifySelfPermission" boolean DEFAULT false NOT NULL,
    "ModifyAllPermission" boolean DEFAULT false NOT NULL,
    "EmployeePermission" boolean DEFAULT false NOT NULL,
    "DatabasePermission" boolean DEFAULT false NOT NULL
);

ALTER TABLE "public"."Roles" OWNER TO "postgres";

ALTER TABLE "public"."Roles" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."Roles_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."Sales" (
    "id" integer NOT NULL,
    "StockNumber" character varying(255) NOT NULL,
    "VehicleMake" character varying(255) NOT NULL,
    "ActualCashValue" numeric(10,2) NOT NULL,
    "GrossProfit" numeric(10,2) NOT NULL,
    "FinAndInsurance" numeric(10,2) NOT NULL,
    "SaleTime" timestamp without time zone DEFAULT "now"(),
    "NewSale" boolean,
    "Holdback" numeric(10,2),
    "LotPack" numeric(10,2),
    "DaysInStock" integer,
    "DealerCost" numeric(10,2),
    "ROI" numeric(3,2),
    "Total" numeric(10,2) NOT NULL,
    "CustomerID" integer NOT NULL,
    "FinancingID" integer,
    "TradeInID" integer,
    "EmployeeID" "uuid" NOT NULL
);

ALTER TABLE "public"."Sales" OWNER TO "postgres";

CREATE TABLE IF NOT EXISTS "public"."SalesGoals" (
    "id" integer NOT NULL,
    "Name" character varying(255) NOT NULL,
    "Description" "text",
    "StartDate" timestamp without time zone DEFAULT "now"() NOT NULL,
    "EndDate" timestamp without time zone DEFAULT "now"() NOT NULL,
    "TotalGoal" numeric(10,2) NOT NULL,
    "Creator" "uuid" NOT NULL
);

ALTER TABLE "public"."SalesGoals" OWNER TO "postgres";

ALTER TABLE "public"."SalesGoals" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."SalesGoals_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

ALTER TABLE "public"."Sales" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."Sales_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."Tasks" (
    "id" integer NOT NULL,
    "Name" character varying(255) NOT NULL,
    "Description" "text",
    "StartDate" timestamp without time zone DEFAULT "now"() NOT NULL,
    "EndDate" timestamp without time zone DEFAULT "now"() NOT NULL,
    "Assignee" "uuid",
    "Creator" "uuid" NOT NULL,
    "Status" "public"."Task Status" DEFAULT 'IN_PROGRESS'::"public"."Task Status" NOT NULL
);

ALTER TABLE "public"."Tasks" OWNER TO "postgres";

ALTER TABLE "public"."Tasks" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."Tasks_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."TradeIns" (
    "id" integer NOT NULL,
    "Trade" character varying(255) NOT NULL,
    "ActualCashValue" numeric(10,2) NOT NULL
);

ALTER TABLE "public"."TradeIns" OWNER TO "postgres";

ALTER TABLE "public"."TradeIns" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."TradeIns_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "test1"."Customers" (
    "CustomerID" integer NOT NULL,
    "Name" character varying(255) NOT NULL,
    "City" character varying(255) NOT NULL
);

ALTER TABLE "test1"."Customers" OWNER TO "postgres";

ALTER TABLE "test1"."Customers" ALTER COLUMN "CustomerID" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "test1"."Customers_CustomerID_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "test1"."Employees" (
    "EmployeeID" integer NOT NULL,
    "Name" character varying(255) NOT NULL,
    "EmployeeNumber" character varying(255) NOT NULL,
    "Password" "text" NOT NULL,
    "Role" integer NOT NULL,
    "CreatedOn" timestamp without time zone DEFAULT "now"(),
    "LastAccessed" timestamp without time zone DEFAULT "now"()
);

ALTER TABLE "test1"."Employees" OWNER TO "postgres";

ALTER TABLE "test1"."Employees" ALTER COLUMN "EmployeeID" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "test1"."Employees_EmployeeID_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "test1"."Financing" (
    "FinancingID" integer NOT NULL,
    "Method" character varying(255) NOT NULL
);

ALTER TABLE "test1"."Financing" OWNER TO "postgres";

ALTER TABLE "test1"."Financing" ALTER COLUMN "FinancingID" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "test1"."Financing_FinancingID_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "test1"."MonthlySales" (
    "MonthlySaleID" integer NOT NULL,
    "TimePeriod" timestamp without time zone,
    "GrossProfit" numeric(10,2),
    "FinAndInsurance" numeric(10,2),
    "Holdback" numeric(10,2),
    "Total" numeric(10,2)
);

ALTER TABLE "test1"."MonthlySales" OWNER TO "postgres";

ALTER TABLE "test1"."MonthlySales" ALTER COLUMN "MonthlySaleID" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "test1"."MonthlySales_MonthlySaleID_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "test1"."Roles" (
    "RoleID" integer NOT NULL,
    "RoleName" character varying(255),
    "ReadPermission" boolean DEFAULT false,
    "WritePermission" boolean DEFAULT false,
    "ModifyPermission" boolean DEFAULT false,
    "EmployeePermission" boolean DEFAULT false,
    "DatabasePermission" boolean DEFAULT false
);

ALTER TABLE "test1"."Roles" OWNER TO "postgres";

ALTER TABLE "test1"."Roles" ALTER COLUMN "RoleID" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "test1"."Roles_RoleID_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "test1"."Sales" (
    "SaleID" integer NOT NULL,
    "StockNumber" character varying(255) NOT NULL,
    "VehicleMake" character varying(255) NOT NULL,
    "ActualCashValue" numeric(10,2) NOT NULL,
    "GrossProfit" numeric(10,2) NOT NULL,
    "FinAndInsurance" numeric(10,2) NOT NULL,
    "Holdback" numeric(10,2) NOT NULL,
    "Total" numeric(10,2) NOT NULL,
    "SaleTime" timestamp without time zone DEFAULT "now"(),
    "EmployeeID" integer NOT NULL,
    "CustomerID" integer NOT NULL,
    "FinancingID" integer,
    "TradeInID" integer
);

ALTER TABLE "test1"."Sales" OWNER TO "postgres";

ALTER TABLE "test1"."Sales" ALTER COLUMN "SaleID" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "test1"."Sales_SaleID_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "test1"."TradeIns" (
    "TradeInID" integer NOT NULL,
    "Trade" character varying(255) NOT NULL,
    "ActualCashValue" numeric(10,2) NOT NULL
);

ALTER TABLE "test1"."TradeIns" OWNER TO "postgres";

ALTER TABLE "test1"."TradeIns" ALTER COLUMN "TradeInID" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "test1"."TradeIns_TradeInID_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "test2"."Customers" (
    "CustomerID" integer NOT NULL,
    "Name" character varying(255) NOT NULL,
    "City" character varying(255) NOT NULL
);

ALTER TABLE "test2"."Customers" OWNER TO "postgres";

ALTER TABLE "test2"."Customers" ALTER COLUMN "CustomerID" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "test2"."Customers_CustomerID_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "test2"."Employees" (
    "EmployeeID" integer NOT NULL,
    "Name" character varying(255) NOT NULL,
    "EmployeeNumber" character varying(255) NOT NULL,
    "Password" "text" NOT NULL,
    "Role" integer NOT NULL,
    "CreatedOn" timestamp without time zone DEFAULT "now"(),
    "LastAccessed" timestamp without time zone DEFAULT "now"()
);

ALTER TABLE "test2"."Employees" OWNER TO "postgres";

ALTER TABLE "test2"."Employees" ALTER COLUMN "EmployeeID" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "test2"."Employees_EmployeeID_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "test2"."Financing" (
    "FinancingID" integer NOT NULL,
    "Method" character varying(255) NOT NULL
);

ALTER TABLE "test2"."Financing" OWNER TO "postgres";

ALTER TABLE "test2"."Financing" ALTER COLUMN "FinancingID" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "test2"."Financing_FinancingID_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "test2"."MonthlySales" (
    "MonthlySaleID" integer NOT NULL,
    "TimePeriod" timestamp without time zone,
    "GrossProfit" numeric(10,2),
    "FinAndInsurance" numeric(10,2),
    "Holdback" numeric(10,2),
    "Total" numeric(10,2)
);

ALTER TABLE "test2"."MonthlySales" OWNER TO "postgres";

ALTER TABLE "test2"."MonthlySales" ALTER COLUMN "MonthlySaleID" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "test2"."MonthlySales_MonthlySaleID_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "test2"."Roles" (
    "RoleID" integer NOT NULL,
    "RoleName" character varying(255),
    "ReadPermission" boolean DEFAULT false,
    "WritePermission" boolean DEFAULT false,
    "ModifyPermission" boolean DEFAULT false,
    "EmployeePermission" boolean DEFAULT false,
    "DatabasePermission" boolean DEFAULT false
);

ALTER TABLE "test2"."Roles" OWNER TO "postgres";

ALTER TABLE "test2"."Roles" ALTER COLUMN "RoleID" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "test2"."Roles_RoleID_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "test2"."Sales" (
    "SaleID" integer NOT NULL,
    "StockNumber" character varying(255) NOT NULL,
    "VehicleMake" character varying(255) NOT NULL,
    "ActualCashValue" numeric(10,2) NOT NULL,
    "GrossProfit" numeric(10,2) NOT NULL,
    "FinAndInsurance" numeric(10,2) NOT NULL,
    "Holdback" numeric(10,2) NOT NULL,
    "Total" numeric(10,2) NOT NULL,
    "SaleTime" timestamp without time zone DEFAULT "now"(),
    "EmployeeID" integer NOT NULL,
    "CustomerID" integer NOT NULL,
    "FinancingID" integer,
    "TradeInID" integer
);

ALTER TABLE "test2"."Sales" OWNER TO "postgres";

ALTER TABLE "test2"."Sales" ALTER COLUMN "SaleID" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "test2"."Sales_SaleID_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "test2"."TradeIns" (
    "TradeInID" integer NOT NULL,
    "Trade" character varying(255) NOT NULL,
    "ActualCashValue" numeric(10,2) NOT NULL
);

ALTER TABLE "test2"."TradeIns" OWNER TO "postgres";

ALTER TABLE "test2"."TradeIns" ALTER COLUMN "TradeInID" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "test2"."TradeIns_TradeInID_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "test_schema3"."Customers" (
    "CustomerID" integer NOT NULL,
    "Name" character varying(255) NOT NULL,
    "City" character varying(255) NOT NULL
);

ALTER TABLE "test_schema3"."Customers" OWNER TO "postgres";

ALTER TABLE "test_schema3"."Customers" ALTER COLUMN "CustomerID" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "test_schema3"."Customers_CustomerID_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "test_schema3"."Employees" (
    "EmployeeID" integer NOT NULL,
    "Name" character varying(255) NOT NULL,
    "EmployeeNumber" character varying(255) NOT NULL,
    "Password" "text" NOT NULL,
    "Role" integer NOT NULL,
    "CreatedOn" timestamp without time zone DEFAULT "now"(),
    "LastAccessed" timestamp without time zone DEFAULT "now"()
);

ALTER TABLE "test_schema3"."Employees" OWNER TO "postgres";

ALTER TABLE "test_schema3"."Employees" ALTER COLUMN "EmployeeID" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "test_schema3"."Employees_EmployeeID_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "test_schema3"."Financing" (
    "FinancingID" integer NOT NULL,
    "Method" character varying(255) NOT NULL
);

ALTER TABLE "test_schema3"."Financing" OWNER TO "postgres";

ALTER TABLE "test_schema3"."Financing" ALTER COLUMN "FinancingID" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "test_schema3"."Financing_FinancingID_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "test_schema3"."MonthlySales" (
    "MonthlySaleID" integer NOT NULL,
    "TimePeriod" timestamp without time zone,
    "GrossProfit" numeric(10,2),
    "FinAndInsurance" numeric(10,2),
    "Holdback" numeric(10,2),
    "Total" numeric(10,2)
);

ALTER TABLE "test_schema3"."MonthlySales" OWNER TO "postgres";

ALTER TABLE "test_schema3"."MonthlySales" ALTER COLUMN "MonthlySaleID" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "test_schema3"."MonthlySales_MonthlySaleID_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "test_schema3"."Roles" (
    "RoleID" integer NOT NULL,
    "RoleName" character varying(255),
    "ReadPermission" boolean DEFAULT false,
    "WritePermission" boolean DEFAULT false,
    "ModifyPermission" boolean DEFAULT false,
    "EmployeePermission" boolean DEFAULT false,
    "DatabasePermission" boolean DEFAULT false
);

ALTER TABLE "test_schema3"."Roles" OWNER TO "postgres";

ALTER TABLE "test_schema3"."Roles" ALTER COLUMN "RoleID" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "test_schema3"."Roles_RoleID_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "test_schema3"."Sales" (
    "SaleID" integer NOT NULL,
    "StockNumber" character varying(255) NOT NULL,
    "VehicleMake" character varying(255) NOT NULL,
    "ActualCashValue" numeric(10,2) NOT NULL,
    "TradeInAllowance" numeric(10,2) NOT NULL,
    "GrossProfit" numeric(10,2) NOT NULL,
    "FinAndInsurance" numeric(10,2) NOT NULL,
    "Holdback" numeric(10,2) NOT NULL,
    "Total" numeric(10,2) NOT NULL,
    "SaleTime" timestamp without time zone DEFAULT "now"(),
    "EmployeeID" integer NOT NULL,
    "CustomerID" integer NOT NULL,
    "FinancingID" integer,
    "TradeInID" integer
);

ALTER TABLE "test_schema3"."Sales" OWNER TO "postgres";

ALTER TABLE "test_schema3"."Sales" ALTER COLUMN "SaleID" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "test_schema3"."Sales_SaleID_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "test_schema3"."TradeIns" (
    "TradeInID" integer NOT NULL,
    "Trade" character varying(255) NOT NULL,
    "ActualCashValue" numeric(10,2) NOT NULL
);

ALTER TABLE "test_schema3"."TradeIns" OWNER TO "postgres";

ALTER TABLE "test_schema3"."TradeIns" ALTER COLUMN "TradeInID" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "test_schema3"."TradeIns_TradeInID_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "test_scr1"."Customers" (
    "CustomerID" integer NOT NULL,
    "Name" character varying(255) NOT NULL,
    "City" character varying(255) NOT NULL
);

ALTER TABLE "test_scr1"."Customers" OWNER TO "postgres";

ALTER TABLE "test_scr1"."Customers" ALTER COLUMN "CustomerID" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "test_scr1"."Customers_CustomerID_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "test_scr1"."Employees" (
    "EmployeeID" integer NOT NULL,
    "Name" character varying(255) NOT NULL,
    "EmployeeNumber" character varying(255) NOT NULL,
    "Password" "text" NOT NULL,
    "Role" integer NOT NULL,
    "CreatedOn" timestamp without time zone DEFAULT "now"(),
    "LastAccessed" timestamp without time zone DEFAULT "now"()
);

ALTER TABLE "test_scr1"."Employees" OWNER TO "postgres";

ALTER TABLE "test_scr1"."Employees" ALTER COLUMN "EmployeeID" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "test_scr1"."Employees_EmployeeID_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "test_scr1"."Financing" (
    "FinancingID" integer NOT NULL,
    "Method" character varying(255) NOT NULL
);

ALTER TABLE "test_scr1"."Financing" OWNER TO "postgres";

ALTER TABLE "test_scr1"."Financing" ALTER COLUMN "FinancingID" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "test_scr1"."Financing_FinancingID_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "test_scr1"."MonthlySales" (
    "MonthlySaleID" integer NOT NULL,
    "TimePeriod" timestamp without time zone,
    "GrossProfit" numeric(10,2),
    "FinAndInsurance" numeric(10,2),
    "Holdback" numeric(10,2),
    "Total" numeric(10,2)
);

ALTER TABLE "test_scr1"."MonthlySales" OWNER TO "postgres";

ALTER TABLE "test_scr1"."MonthlySales" ALTER COLUMN "MonthlySaleID" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "test_scr1"."MonthlySales_MonthlySaleID_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "test_scr1"."Roles" (
    "RoleID" integer NOT NULL,
    "RoleName" character varying(255),
    "ReadPermission" boolean DEFAULT false,
    "WritePermission" boolean DEFAULT false,
    "ModifyPermission" boolean DEFAULT false,
    "EmployeePermission" boolean DEFAULT false,
    "DatabasePermission" boolean DEFAULT false
);

ALTER TABLE "test_scr1"."Roles" OWNER TO "postgres";

ALTER TABLE "test_scr1"."Roles" ALTER COLUMN "RoleID" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "test_scr1"."Roles_RoleID_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "test_scr1"."Sales" (
    "SaleID" integer NOT NULL,
    "StockNumber" character varying(255) NOT NULL,
    "VehicleMake" character varying(255) NOT NULL,
    "ActualCashValue" numeric(10,2) NOT NULL,
    "GrossProfit" numeric(10,2) NOT NULL,
    "FinAndInsurance" numeric(10,2) NOT NULL,
    "Holdback" numeric(10,2) NOT NULL,
    "Total" numeric(10,2) NOT NULL,
    "SaleTime" timestamp without time zone DEFAULT "now"(),
    "EmployeeID" integer NOT NULL,
    "CustomerID" integer NOT NULL,
    "FinancingID" integer,
    "TradeInID" integer
);

ALTER TABLE "test_scr1"."Sales" OWNER TO "postgres";

ALTER TABLE "test_scr1"."Sales" ALTER COLUMN "SaleID" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "test_scr1"."Sales_SaleID_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "test_scr1"."TradeIns" (
    "TradeInID" integer NOT NULL,
    "Trade" character varying(255) NOT NULL,
    "ActualCashValue" numeric(10,2) NOT NULL
);

ALTER TABLE "test_scr1"."TradeIns" OWNER TO "postgres";

ALTER TABLE "test_scr1"."TradeIns" ALTER COLUMN "TradeInID" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "test_scr1"."TradeIns_TradeInID_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "test_scr2"."Customers" (
    "id" integer NOT NULL,
    "Name" character varying(255) NOT NULL,
    "City" character varying(255) NOT NULL
);

ALTER TABLE "test_scr2"."Customers" OWNER TO "postgres";

ALTER TABLE "test_scr2"."Customers" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "test_scr2"."Customers_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "test_scr2"."Employees" (
    "id" integer NOT NULL,
    "Name" character varying(255) NOT NULL,
    "EmployeeNumber" character varying(255) NOT NULL,
    "Password" "text" NOT NULL,
    "Role" integer NOT NULL,
    "CreatedOn" timestamp without time zone DEFAULT "now"(),
    "LastAccessed" timestamp without time zone DEFAULT "now"()
);

ALTER TABLE "test_scr2"."Employees" OWNER TO "postgres";

ALTER TABLE "test_scr2"."Employees" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "test_scr2"."Employees_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "test_scr2"."Financing" (
    "id" integer NOT NULL,
    "Method" character varying(255) NOT NULL
);

ALTER TABLE "test_scr2"."Financing" OWNER TO "postgres";

ALTER TABLE "test_scr2"."Financing" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "test_scr2"."Financing_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "test_scr2"."MonthlySales" (
    "id" integer NOT NULL,
    "TimePeriod" timestamp without time zone,
    "GrossProfit" numeric(10,2),
    "FinAndInsurance" numeric(10,2),
    "Holdback" numeric(10,2),
    "Total" numeric(10,2)
);

ALTER TABLE "test_scr2"."MonthlySales" OWNER TO "postgres";

ALTER TABLE "test_scr2"."MonthlySales" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "test_scr2"."MonthlySales_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "test_scr2"."Notifications" (
    "id" integer NOT NULL,
    "Employee" integer NOT NULL,
    "Sale" integer NOT NULL
);

ALTER TABLE "test_scr2"."Notifications" OWNER TO "postgres";

ALTER TABLE "test_scr2"."Notifications" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "test_scr2"."Notifications_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "test_scr2"."Roles" (
    "id" integer NOT NULL,
    "RoleName" character varying(255),
    "ReadPermission" boolean DEFAULT false,
    "WritePermission" boolean DEFAULT false,
    "ModifyPermission" boolean DEFAULT false,
    "EmployeePermission" boolean DEFAULT false,
    "DatabasePermission" boolean DEFAULT false
);

ALTER TABLE "test_scr2"."Roles" OWNER TO "postgres";

ALTER TABLE "test_scr2"."Roles" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "test_scr2"."Roles_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "test_scr2"."Sales" (
    "id" integer NOT NULL,
    "StockNumber" character varying(255) NOT NULL,
    "VehicleMake" character varying(255) NOT NULL,
    "ActualCashValue" numeric(10,2) NOT NULL,
    "GrossProfit" numeric(10,2) NOT NULL,
    "FinAndInsurance" numeric(10,2) NOT NULL,
    "Holdback" numeric(10,2) NOT NULL,
    "Total" numeric(10,2) NOT NULL,
    "SaleTime" timestamp without time zone DEFAULT "now"(),
    "EmployeeID" integer NOT NULL,
    "CustomerID" integer NOT NULL,
    "FinancingID" integer,
    "TradeInID" integer
);

ALTER TABLE "test_scr2"."Sales" OWNER TO "postgres";

CREATE TABLE IF NOT EXISTS "test_scr2"."SalesGoals" (
    "id" integer NOT NULL,
    "Name" character varying(255),
    "Description" "text",
    "Assignee" integer,
    "Creator" integer,
    "GoalDeadline" timestamp without time zone,
    "TotalGoal" numeric(10,2)
);

ALTER TABLE "test_scr2"."SalesGoals" OWNER TO "postgres";

ALTER TABLE "test_scr2"."SalesGoals" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "test_scr2"."SalesGoals_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

ALTER TABLE "test_scr2"."Sales" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "test_scr2"."Sales_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "test_scr2"."Tasks" (
    "id" integer NOT NULL,
    "Name" character varying(255) NOT NULL,
    "Description" "text",
    "PercentageComplete" numeric(3,2),
    "DateIssued" timestamp without time zone DEFAULT "now"(),
    "Assignee" integer,
    "Creator" integer
);

ALTER TABLE "test_scr2"."Tasks" OWNER TO "postgres";

ALTER TABLE "test_scr2"."Tasks" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "test_scr2"."Tasks_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "test_scr2"."TradeIns" (
    "id" integer NOT NULL,
    "Trade" character varying(255) NOT NULL,
    "ActualCashValue" numeric(10,2) NOT NULL
);

ALTER TABLE "test_scr2"."TradeIns" OWNER TO "postgres";

ALTER TABLE "test_scr2"."TradeIns" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "test_scr2"."TradeIns_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "test_scr3"."Customers" (
    "id" integer NOT NULL,
    "Name" character varying(255) NOT NULL,
    "City" character varying(255) NOT NULL
);

ALTER TABLE "test_scr3"."Customers" OWNER TO "postgres";

ALTER TABLE "test_scr3"."Customers" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "test_scr3"."Customers_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "test_scr3"."Employees" (
    "id" integer NOT NULL,
    "Name" character varying(255) NOT NULL,
    "EmployeeNumber" character varying(255) NOT NULL,
    "Password" "text" NOT NULL,
    "Role" integer NOT NULL,
    "CreatedOn" timestamp without time zone DEFAULT "now"(),
    "LastAccessed" timestamp without time zone DEFAULT "now"()
);

ALTER TABLE "test_scr3"."Employees" OWNER TO "postgres";

ALTER TABLE "test_scr3"."Employees" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "test_scr3"."Employees_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "test_scr3"."Financing" (
    "id" integer NOT NULL,
    "Method" character varying(255) NOT NULL
);

ALTER TABLE "test_scr3"."Financing" OWNER TO "postgres";

ALTER TABLE "test_scr3"."Financing" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "test_scr3"."Financing_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "test_scr3"."MonthlySales" (
    "id" integer NOT NULL,
    "TimePeriod" timestamp without time zone,
    "GrossProfit" numeric(10,2),
    "FinAndInsurance" numeric(10,2),
    "Holdback" numeric(10,2),
    "Total" numeric(10,2)
);

ALTER TABLE "test_scr3"."MonthlySales" OWNER TO "postgres";

ALTER TABLE "test_scr3"."MonthlySales" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "test_scr3"."MonthlySales_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "test_scr3"."Notifications" (
    "id" bigint NOT NULL,
    "Employee" integer NOT NULL,
    "Sale" integer NOT NULL
);

ALTER TABLE "test_scr3"."Notifications" OWNER TO "postgres";

ALTER TABLE "test_scr3"."Notifications" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "test_scr3"."Notifications_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "test_scr3"."Roles" (
    "id" integer NOT NULL,
    "RoleName" character varying(255),
    "ReadPermission" boolean DEFAULT false,
    "WritePermission" boolean DEFAULT false,
    "ModifyPermission" boolean DEFAULT false,
    "EmployeePermission" boolean DEFAULT false,
    "DatabasePermission" boolean DEFAULT false
);

ALTER TABLE "test_scr3"."Roles" OWNER TO "postgres";

ALTER TABLE "test_scr3"."Roles" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "test_scr3"."Roles_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "test_scr3"."Sales" (
    "id" integer NOT NULL,
    "StockNumber" character varying(255) NOT NULL,
    "VehicleMake" character varying(255) NOT NULL,
    "ActualCashValue" numeric(10,2) NOT NULL,
    "GrossProfit" numeric(10,2) NOT NULL,
    "FinAndInsurance" numeric(10,2) NOT NULL,
    "Holdback" numeric(10,2) NOT NULL,
    "Total" numeric(10,2) NOT NULL,
    "SaleTime" timestamp without time zone DEFAULT "now"(),
    "EmployeeID" integer NOT NULL,
    "CustomerID" integer NOT NULL,
    "FinancingID" integer,
    "TradeInID" integer
);

ALTER TABLE "test_scr3"."Sales" OWNER TO "postgres";

CREATE TABLE IF NOT EXISTS "test_scr3"."SalesGoals" (
    "id" integer NOT NULL,
    "Name" character varying(255),
    "Description" "text",
    "Assignee" integer,
    "Creator" integer,
    "GoalTime" timestamp without time zone,
    "TotalGoal" numeric(10,2)
);

ALTER TABLE "test_scr3"."SalesGoals" OWNER TO "postgres";

ALTER TABLE "test_scr3"."SalesGoals" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "test_scr3"."SalesGoals_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

ALTER TABLE "test_scr3"."Sales" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "test_scr3"."Sales_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "test_scr3"."Tasks" (
    "id" integer NOT NULL,
    "Name" character varying(255) NOT NULL,
    "Description" "text",
    "PercentageComplete" numeric(3,2),
    "DateIssued" timestamp without time zone DEFAULT "now"(),
    "Assignee" integer,
    "Creator" integer
);

ALTER TABLE "test_scr3"."Tasks" OWNER TO "postgres";

ALTER TABLE "test_scr3"."Tasks" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "test_scr3"."Tasks_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "test_scr3"."TradeIns" (
    "id" integer NOT NULL,
    "Trade" character varying(255) NOT NULL,
    "ActualCashValue" numeric(10,2) NOT NULL
);

ALTER TABLE "test_scr3"."TradeIns" OWNER TO "postgres";

ALTER TABLE "test_scr3"."TradeIns" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "test_scr3"."TradeIns_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "test_scr4"."Customers" (
    "id" integer NOT NULL,
    "Name" character varying(255) NOT NULL,
    "City" character varying(255) NOT NULL
);

ALTER TABLE "test_scr4"."Customers" OWNER TO "postgres";

ALTER TABLE "test_scr4"."Customers" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "test_scr4"."Customers_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "test_scr4"."Employees" (
    "id" integer NOT NULL,
    "Name" character varying(255) NOT NULL,
    "EmployeeNumber" character varying(255) NOT NULL,
    "Email" "text" NOT NULL,
    "Password" "text" NOT NULL,
    "Role" integer NOT NULL,
    "CreatedOn" timestamp without time zone DEFAULT "now"() NOT NULL,
    "LastAccessed" timestamp without time zone DEFAULT "now"() NOT NULL
);

ALTER TABLE "test_scr4"."Employees" OWNER TO "postgres";

ALTER TABLE "test_scr4"."Employees" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "test_scr4"."Employees_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "test_scr4"."Financing" (
    "id" integer NOT NULL,
    "Method" character varying(255) NOT NULL
);

ALTER TABLE "test_scr4"."Financing" OWNER TO "postgres";

ALTER TABLE "test_scr4"."Financing" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "test_scr4"."Financing_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "test_scr4"."MonthlySales" (
    "id" integer NOT NULL,
    "TimePeriod" timestamp without time zone NOT NULL,
    "GrossProfit" numeric(10,2) NOT NULL,
    "FinAndInsurance" numeric(10,2) NOT NULL,
    "Holdback" numeric(10,2) NOT NULL,
    "Total" numeric(10,2) NOT NULL
);

ALTER TABLE "test_scr4"."MonthlySales" OWNER TO "postgres";

ALTER TABLE "test_scr4"."MonthlySales" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "test_scr4"."MonthlySales_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "test_scr4"."Notifications" (
    "id" bigint NOT NULL,
    "Employee" integer NOT NULL,
    "Sale" integer NOT NULL
);

ALTER TABLE "test_scr4"."Notifications" OWNER TO "postgres";

ALTER TABLE "test_scr4"."Notifications" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "test_scr4"."Notifications_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "test_scr4"."Roles" (
    "id" integer NOT NULL,
    "RoleName" character varying(255),
    "ReadPermission" boolean DEFAULT false NOT NULL,
    "WritePermission" boolean DEFAULT false NOT NULL,
    "ModifySelfPermission" boolean DEFAULT false NOT NULL,
    "ModifyAllPermission" boolean DEFAULT false NOT NULL,
    "EmployeePermission" boolean DEFAULT false NOT NULL,
    "DatabasePermission" boolean DEFAULT false NOT NULL
);

ALTER TABLE "test_scr4"."Roles" OWNER TO "postgres";

ALTER TABLE "test_scr4"."Roles" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "test_scr4"."Roles_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "test_scr4"."Sales" (
    "id" integer NOT NULL,
    "StockNumber" character varying(255) NOT NULL,
    "VehicleMake" character varying(255) NOT NULL,
    "ActualCashValue" numeric(10,2) NOT NULL,
    "GrossProfit" numeric(10,2) NOT NULL,
    "FinAndInsurance" numeric(10,2) NOT NULL,
    "SaleTime" timestamp without time zone DEFAULT "now"(),
    "NewSale" boolean,
    "Holdback" numeric(10,2),
    "LotPack" numeric(10,2),
    "DaysInStock" integer,
    "DealerCost" numeric(10,2),
    "ROI" numeric(3,2),
    "Total" numeric(10,2) NOT NULL,
    "EmployeeID" integer NOT NULL,
    "CustomerID" integer NOT NULL,
    "FinancingID" integer,
    "TradeInID" integer
);

ALTER TABLE "test_scr4"."Sales" OWNER TO "postgres";

CREATE TABLE IF NOT EXISTS "test_scr4"."SalesGoals" (
    "id" integer NOT NULL,
    "Name" character varying(255) NOT NULL,
    "Description" "text",
    "Creator" integer NOT NULL,
    "StartDate" timestamp without time zone DEFAULT "now"() NOT NULL,
    "EndDate" timestamp without time zone DEFAULT "now"() NOT NULL,
    "TotalGoal" numeric(10,2) NOT NULL
);

ALTER TABLE "test_scr4"."SalesGoals" OWNER TO "postgres";

ALTER TABLE "test_scr4"."SalesGoals" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "test_scr4"."SalesGoals_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

ALTER TABLE "test_scr4"."Sales" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "test_scr4"."Sales_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "test_scr4"."Tasks" (
    "id" integer NOT NULL,
    "Name" character varying(255) NOT NULL,
    "Description" "text",
    "PercentageComplete" numeric(3,2),
    "StartDate" timestamp without time zone DEFAULT "now"() NOT NULL,
    "EndDate" timestamp without time zone DEFAULT "now"() NOT NULL,
    "Assignee" integer,
    "Creator" integer
);

ALTER TABLE "test_scr4"."Tasks" OWNER TO "postgres";

ALTER TABLE "test_scr4"."Tasks" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "test_scr4"."Tasks_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "test_scr4"."TradeIns" (
    "id" integer NOT NULL,
    "Trade" character varying(255) NOT NULL,
    "ActualCashValue" numeric(10,2) NOT NULL
);

ALTER TABLE "test_scr4"."TradeIns" OWNER TO "postgres";

ALTER TABLE "test_scr4"."TradeIns" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "test_scr4"."TradeIns_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "test_scr5"."Customers" (
    "id" integer NOT NULL,
    "Name" character varying(255) NOT NULL,
    "City" character varying(255) NOT NULL
);

ALTER TABLE "test_scr5"."Customers" OWNER TO "postgres";

ALTER TABLE "test_scr5"."Customers" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "test_scr5"."Customers_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "test_scr5"."Employees" (
    "id" integer NOT NULL,
    "Name" character varying(255) NOT NULL,
    "EmployeeNumber" character varying(255) NOT NULL,
    "Email" "text" NOT NULL,
    "Password" "text" NOT NULL,
    "Role" integer NOT NULL,
    "CreatedOn" timestamp without time zone DEFAULT "now"() NOT NULL,
    "LastAccessed" timestamp without time zone DEFAULT "now"() NOT NULL
);

ALTER TABLE "test_scr5"."Employees" OWNER TO "postgres";

ALTER TABLE "test_scr5"."Employees" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "test_scr5"."Employees_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "test_scr5"."Financing" (
    "id" integer NOT NULL,
    "Method" character varying(255) NOT NULL
);

ALTER TABLE "test_scr5"."Financing" OWNER TO "postgres";

ALTER TABLE "test_scr5"."Financing" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "test_scr5"."Financing_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "test_scr5"."MonthlySales" (
    "id" integer NOT NULL,
    "TimePeriod" timestamp without time zone NOT NULL,
    "GrossProfit" numeric(10,2) NOT NULL,
    "FinAndInsurance" numeric(10,2) NOT NULL,
    "Holdback" numeric(10,2) NOT NULL,
    "Total" numeric(10,2) NOT NULL
);

ALTER TABLE "test_scr5"."MonthlySales" OWNER TO "postgres";

ALTER TABLE "test_scr5"."MonthlySales" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "test_scr5"."MonthlySales_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "test_scr5"."Notifications" (
    "id" bigint NOT NULL,
    "Employee" integer NOT NULL,
    "Sale" integer NOT NULL
);

ALTER TABLE "test_scr5"."Notifications" OWNER TO "postgres";

ALTER TABLE "test_scr5"."Notifications" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "test_scr5"."Notifications_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "test_scr5"."Roles" (
    "id" integer NOT NULL,
    "RoleName" character varying(255),
    "ReadPermission" boolean DEFAULT false NOT NULL,
    "WritePermission" boolean DEFAULT false NOT NULL,
    "ModifySelfPermission" boolean DEFAULT false NOT NULL,
    "ModifyAllPermission" boolean DEFAULT false NOT NULL,
    "EmployeePermission" boolean DEFAULT false NOT NULL,
    "DatabasePermission" boolean DEFAULT false NOT NULL
);

ALTER TABLE "test_scr5"."Roles" OWNER TO "postgres";

ALTER TABLE "test_scr5"."Roles" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "test_scr5"."Roles_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "test_scr5"."Sales" (
    "id" integer NOT NULL,
    "StockNumber" character varying(255) NOT NULL,
    "VehicleMake" character varying(255) NOT NULL,
    "ActualCashValue" numeric(10,2) NOT NULL,
    "GrossProfit" numeric(10,2) NOT NULL,
    "FinAndInsurance" numeric(10,2) NOT NULL,
    "SaleTime" timestamp without time zone DEFAULT "now"(),
    "NewSale" boolean,
    "Holdback" numeric(10,2),
    "LotPack" numeric(10,2),
    "DaysInStock" integer,
    "DealerCost" numeric(10,2),
    "ROI" numeric(3,2),
    "Total" numeric(10,2) NOT NULL,
    "EmployeeID" integer NOT NULL,
    "CustomerID" integer NOT NULL,
    "FinancingID" integer,
    "TradeInID" integer
);

ALTER TABLE "test_scr5"."Sales" OWNER TO "postgres";

CREATE TABLE IF NOT EXISTS "test_scr5"."SalesGoals" (
    "id" integer NOT NULL,
    "Name" character varying(255) NOT NULL,
    "Description" "text",
    "Creator" integer NOT NULL,
    "StartDate" timestamp without time zone DEFAULT "now"() NOT NULL,
    "EndDate" timestamp without time zone DEFAULT "now"() NOT NULL,
    "TotalGoal" numeric(10,2) NOT NULL
);

ALTER TABLE "test_scr5"."SalesGoals" OWNER TO "postgres";

ALTER TABLE "test_scr5"."SalesGoals" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "test_scr5"."SalesGoals_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

ALTER TABLE "test_scr5"."Sales" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "test_scr5"."Sales_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "test_scr5"."Tasks" (
    "id" integer NOT NULL,
    "Name" character varying(255) NOT NULL,
    "Description" "text",
    "PercentageComplete" numeric(3,2),
    "StartDate" timestamp without time zone DEFAULT "now"() NOT NULL,
    "EndDate" timestamp without time zone DEFAULT "now"() NOT NULL,
    "Assignee" integer,
    "Creator" integer
);

ALTER TABLE "test_scr5"."Tasks" OWNER TO "postgres";

ALTER TABLE "test_scr5"."Tasks" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "test_scr5"."Tasks_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "test_scr5"."TradeIns" (
    "id" integer NOT NULL,
    "Trade" character varying(255) NOT NULL,
    "ActualCashValue" numeric(10,2) NOT NULL
);

ALTER TABLE "test_scr5"."TradeIns" OWNER TO "postgres";

ALTER TABLE "test_scr5"."TradeIns" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "test_scr5"."TradeIns_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

ALTER TABLE ONLY "public"."ReferencePages"
    ADD CONSTRAINT "ReferencePages_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."Customers"
    ADD CONSTRAINT "customers_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."Employees"
    ADD CONSTRAINT "employees_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."Financing"
    ADD CONSTRAINT "financing_method_key" UNIQUE ("Method");

ALTER TABLE ONLY "public"."Financing"
    ADD CONSTRAINT "financing_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."MonthlySales"
    ADD CONSTRAINT "monthlysales_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."Notifications"
    ADD CONSTRAINT "notifications_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."Roles"
    ADD CONSTRAINT "roles_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."Roles"
    ADD CONSTRAINT "roles_rolename_key" UNIQUE ("RoleName");

ALTER TABLE ONLY "public"."Sales"
    ADD CONSTRAINT "sales_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."SalesGoals"
    ADD CONSTRAINT "salesgoals_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."Tasks"
    ADD CONSTRAINT "tasks_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."TradeIns"
    ADD CONSTRAINT "tradeins_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "test1"."Customers"
    ADD CONSTRAINT "Customers_pkey" PRIMARY KEY ("CustomerID");

ALTER TABLE ONLY "test1"."Employees"
    ADD CONSTRAINT "Employees_pkey" PRIMARY KEY ("EmployeeID");

ALTER TABLE ONLY "test1"."Financing"
    ADD CONSTRAINT "Financing_Method_key" UNIQUE ("Method");

ALTER TABLE ONLY "test1"."Financing"
    ADD CONSTRAINT "Financing_pkey" PRIMARY KEY ("FinancingID");

ALTER TABLE ONLY "test1"."MonthlySales"
    ADD CONSTRAINT "MonthlySales_pkey" PRIMARY KEY ("MonthlySaleID");

ALTER TABLE ONLY "test1"."Roles"
    ADD CONSTRAINT "Roles_pkey" PRIMARY KEY ("RoleID");

ALTER TABLE ONLY "test1"."Sales"
    ADD CONSTRAINT "Sales_pkey" PRIMARY KEY ("SaleID");

ALTER TABLE ONLY "test1"."TradeIns"
    ADD CONSTRAINT "TradeIns_pkey" PRIMARY KEY ("TradeInID");

ALTER TABLE ONLY "test2"."Customers"
    ADD CONSTRAINT "Customers_pkey" PRIMARY KEY ("CustomerID");

ALTER TABLE ONLY "test2"."Employees"
    ADD CONSTRAINT "Employees_pkey" PRIMARY KEY ("EmployeeID");

ALTER TABLE ONLY "test2"."Financing"
    ADD CONSTRAINT "Financing_Method_key" UNIQUE ("Method");

ALTER TABLE ONLY "test2"."Financing"
    ADD CONSTRAINT "Financing_pkey" PRIMARY KEY ("FinancingID");

ALTER TABLE ONLY "test2"."MonthlySales"
    ADD CONSTRAINT "MonthlySales_pkey" PRIMARY KEY ("MonthlySaleID");

ALTER TABLE ONLY "test2"."Roles"
    ADD CONSTRAINT "Roles_pkey" PRIMARY KEY ("RoleID");

ALTER TABLE ONLY "test2"."Sales"
    ADD CONSTRAINT "Sales_pkey" PRIMARY KEY ("SaleID");

ALTER TABLE ONLY "test2"."TradeIns"
    ADD CONSTRAINT "TradeIns_pkey" PRIMARY KEY ("TradeInID");

ALTER TABLE ONLY "test_schema3"."Customers"
    ADD CONSTRAINT "Customers_pkey" PRIMARY KEY ("CustomerID");

ALTER TABLE ONLY "test_schema3"."Employees"
    ADD CONSTRAINT "Employees_pkey" PRIMARY KEY ("EmployeeID");

ALTER TABLE ONLY "test_schema3"."Financing"
    ADD CONSTRAINT "Financing_Method_key" UNIQUE ("Method");

ALTER TABLE ONLY "test_schema3"."Financing"
    ADD CONSTRAINT "Financing_pkey" PRIMARY KEY ("FinancingID");

ALTER TABLE ONLY "test_schema3"."MonthlySales"
    ADD CONSTRAINT "MonthlySales_pkey" PRIMARY KEY ("MonthlySaleID");

ALTER TABLE ONLY "test_schema3"."Roles"
    ADD CONSTRAINT "Roles_pkey" PRIMARY KEY ("RoleID");

ALTER TABLE ONLY "test_schema3"."Sales"
    ADD CONSTRAINT "Sales_pkey" PRIMARY KEY ("SaleID");

ALTER TABLE ONLY "test_schema3"."TradeIns"
    ADD CONSTRAINT "TradeIns_pkey" PRIMARY KEY ("TradeInID");

ALTER TABLE ONLY "test_scr1"."Customers"
    ADD CONSTRAINT "Customers_pkey" PRIMARY KEY ("CustomerID");

ALTER TABLE ONLY "test_scr1"."Employees"
    ADD CONSTRAINT "Employees_pkey" PRIMARY KEY ("EmployeeID");

ALTER TABLE ONLY "test_scr1"."Financing"
    ADD CONSTRAINT "Financing_Method_key" UNIQUE ("Method");

ALTER TABLE ONLY "test_scr1"."Financing"
    ADD CONSTRAINT "Financing_pkey" PRIMARY KEY ("FinancingID");

ALTER TABLE ONLY "test_scr1"."MonthlySales"
    ADD CONSTRAINT "MonthlySales_pkey" PRIMARY KEY ("MonthlySaleID");

ALTER TABLE ONLY "test_scr1"."Roles"
    ADD CONSTRAINT "Roles_pkey" PRIMARY KEY ("RoleID");

ALTER TABLE ONLY "test_scr1"."Sales"
    ADD CONSTRAINT "Sales_pkey" PRIMARY KEY ("SaleID");

ALTER TABLE ONLY "test_scr1"."TradeIns"
    ADD CONSTRAINT "TradeIns_pkey" PRIMARY KEY ("TradeInID");

ALTER TABLE ONLY "test_scr2"."Customers"
    ADD CONSTRAINT "Customers_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "test_scr2"."Employees"
    ADD CONSTRAINT "Employees_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "test_scr2"."Financing"
    ADD CONSTRAINT "Financing_Method_key" UNIQUE ("Method");

ALTER TABLE ONLY "test_scr2"."Financing"
    ADD CONSTRAINT "Financing_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "test_scr2"."MonthlySales"
    ADD CONSTRAINT "MonthlySales_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "test_scr2"."Notifications"
    ADD CONSTRAINT "Notifications_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "test_scr2"."Roles"
    ADD CONSTRAINT "Roles_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "test_scr2"."SalesGoals"
    ADD CONSTRAINT "SalesGoals_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "test_scr2"."Sales"
    ADD CONSTRAINT "Sales_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "test_scr2"."Tasks"
    ADD CONSTRAINT "Tasks_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "test_scr2"."TradeIns"
    ADD CONSTRAINT "TradeIns_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "test_scr3"."Customers"
    ADD CONSTRAINT "Customers_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "test_scr3"."Employees"
    ADD CONSTRAINT "Employees_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "test_scr3"."Financing"
    ADD CONSTRAINT "Financing_Method_key" UNIQUE ("Method");

ALTER TABLE ONLY "test_scr3"."Financing"
    ADD CONSTRAINT "Financing_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "test_scr3"."MonthlySales"
    ADD CONSTRAINT "MonthlySales_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "test_scr3"."Notifications"
    ADD CONSTRAINT "Notifications_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "test_scr3"."Roles"
    ADD CONSTRAINT "Roles_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "test_scr3"."SalesGoals"
    ADD CONSTRAINT "SalesGoals_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "test_scr3"."Sales"
    ADD CONSTRAINT "Sales_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "test_scr3"."Tasks"
    ADD CONSTRAINT "Tasks_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "test_scr3"."TradeIns"
    ADD CONSTRAINT "TradeIns_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "test_scr4"."Customers"
    ADD CONSTRAINT "Customers_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "test_scr4"."Employees"
    ADD CONSTRAINT "Employees_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "test_scr4"."Financing"
    ADD CONSTRAINT "Financing_Method_key" UNIQUE ("Method");

ALTER TABLE ONLY "test_scr4"."Financing"
    ADD CONSTRAINT "Financing_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "test_scr4"."MonthlySales"
    ADD CONSTRAINT "MonthlySales_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "test_scr4"."Notifications"
    ADD CONSTRAINT "Notifications_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "test_scr4"."Roles"
    ADD CONSTRAINT "Roles_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "test_scr4"."SalesGoals"
    ADD CONSTRAINT "SalesGoals_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "test_scr4"."Sales"
    ADD CONSTRAINT "Sales_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "test_scr4"."Tasks"
    ADD CONSTRAINT "Tasks_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "test_scr4"."TradeIns"
    ADD CONSTRAINT "TradeIns_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "test_scr5"."Customers"
    ADD CONSTRAINT "Customers_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "test_scr5"."Employees"
    ADD CONSTRAINT "Employees_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "test_scr5"."Financing"
    ADD CONSTRAINT "Financing_Method_key" UNIQUE ("Method");

ALTER TABLE ONLY "test_scr5"."Financing"
    ADD CONSTRAINT "Financing_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "test_scr5"."MonthlySales"
    ADD CONSTRAINT "MonthlySales_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "test_scr5"."Notifications"
    ADD CONSTRAINT "Notifications_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "test_scr5"."Roles"
    ADD CONSTRAINT "Roles_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "test_scr5"."SalesGoals"
    ADD CONSTRAINT "SalesGoals_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "test_scr5"."Sales"
    ADD CONSTRAINT "Sales_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "test_scr5"."Tasks"
    ADD CONSTRAINT "Tasks_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "test_scr5"."TradeIns"
    ADD CONSTRAINT "TradeIns_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."Sales"
    ADD CONSTRAINT "Sales_FinancingID_fkey" FOREIGN KEY ("FinancingID") REFERENCES "public"."Financing"("id");

ALTER TABLE ONLY "public"."Employees"
    ADD CONSTRAINT "employees_id_fkey" FOREIGN KEY ("id") REFERENCES "auth"."users"("id") ON DELETE CASCADE;

ALTER TABLE ONLY "public"."Employees"
    ADD CONSTRAINT "employees_role_fkey" FOREIGN KEY ("Role") REFERENCES "public"."Roles"("id") ON UPDATE CASCADE;

ALTER TABLE ONLY "public"."Notifications"
    ADD CONSTRAINT "notifications_employee_fkey" FOREIGN KEY ("Employee") REFERENCES "public"."Employees"("id") ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE ONLY "public"."Notifications"
    ADD CONSTRAINT "notifications_sale_fkey" FOREIGN KEY ("Sale") REFERENCES "public"."Sales"("id");

ALTER TABLE ONLY "public"."Sales"
    ADD CONSTRAINT "sales_customerid_fkey" FOREIGN KEY ("CustomerID") REFERENCES "public"."Customers"("id");

ALTER TABLE ONLY "public"."Sales"
    ADD CONSTRAINT "sales_employeeid_fkey" FOREIGN KEY ("EmployeeID") REFERENCES "public"."Employees"("id") ON UPDATE CASCADE;

ALTER TABLE ONLY "public"."Sales"
    ADD CONSTRAINT "sales_tradeinid_fkey" FOREIGN KEY ("TradeInID") REFERENCES "public"."TradeIns"("id");

ALTER TABLE ONLY "public"."SalesGoals"
    ADD CONSTRAINT "salesgoals_creator_fkey" FOREIGN KEY ("Creator") REFERENCES "public"."Employees"("id");

ALTER TABLE ONLY "public"."Tasks"
    ADD CONSTRAINT "tasks_assignee_fkey" FOREIGN KEY ("Assignee") REFERENCES "public"."Employees"("id") ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE ONLY "public"."Tasks"
    ADD CONSTRAINT "tasks_creator_fkey" FOREIGN KEY ("Creator") REFERENCES "public"."Employees"("id") ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE ONLY "test1"."Employees"
    ADD CONSTRAINT "Employees_Role_fkey" FOREIGN KEY ("Role") REFERENCES "test1"."Roles"("RoleID");

ALTER TABLE ONLY "test1"."Sales"
    ADD CONSTRAINT "Sales_CustomerID_fkey" FOREIGN KEY ("CustomerID") REFERENCES "test1"."Customers"("CustomerID");

ALTER TABLE ONLY "test1"."Sales"
    ADD CONSTRAINT "Sales_EmployeeID_fkey" FOREIGN KEY ("EmployeeID") REFERENCES "test1"."Employees"("EmployeeID");

ALTER TABLE ONLY "test1"."Sales"
    ADD CONSTRAINT "Sales_FinancingID_fkey" FOREIGN KEY ("FinancingID") REFERENCES "test1"."Financing"("FinancingID");

ALTER TABLE ONLY "test1"."Sales"
    ADD CONSTRAINT "Sales_TradeInID_fkey" FOREIGN KEY ("TradeInID") REFERENCES "test1"."TradeIns"("TradeInID");

ALTER TABLE ONLY "test2"."Employees"
    ADD CONSTRAINT "Employees_Role_fkey" FOREIGN KEY ("Role") REFERENCES "test2"."Roles"("RoleID");

ALTER TABLE ONLY "test2"."Sales"
    ADD CONSTRAINT "Sales_CustomerID_fkey" FOREIGN KEY ("CustomerID") REFERENCES "test2"."Customers"("CustomerID");

ALTER TABLE ONLY "test2"."Sales"
    ADD CONSTRAINT "Sales_EmployeeID_fkey" FOREIGN KEY ("EmployeeID") REFERENCES "test2"."Employees"("EmployeeID");

ALTER TABLE ONLY "test2"."Sales"
    ADD CONSTRAINT "Sales_FinancingID_fkey" FOREIGN KEY ("FinancingID") REFERENCES "test2"."Financing"("FinancingID");

ALTER TABLE ONLY "test2"."Sales"
    ADD CONSTRAINT "Sales_TradeInID_fkey" FOREIGN KEY ("TradeInID") REFERENCES "test2"."TradeIns"("TradeInID");

ALTER TABLE ONLY "test_schema3"."Employees"
    ADD CONSTRAINT "Employees_Role_fkey" FOREIGN KEY ("Role") REFERENCES "test_schema3"."Roles"("RoleID");

ALTER TABLE ONLY "test_schema3"."Sales"
    ADD CONSTRAINT "Sales_CustomerID_fkey" FOREIGN KEY ("CustomerID") REFERENCES "test_schema3"."Customers"("CustomerID");

ALTER TABLE ONLY "test_schema3"."Sales"
    ADD CONSTRAINT "Sales_EmployeeID_fkey" FOREIGN KEY ("EmployeeID") REFERENCES "test_schema3"."Employees"("EmployeeID");

ALTER TABLE ONLY "test_schema3"."Sales"
    ADD CONSTRAINT "Sales_FinancingID_fkey" FOREIGN KEY ("FinancingID") REFERENCES "test_schema3"."Financing"("FinancingID");

ALTER TABLE ONLY "test_schema3"."Sales"
    ADD CONSTRAINT "Sales_TradeInID_fkey" FOREIGN KEY ("TradeInID") REFERENCES "test_schema3"."TradeIns"("TradeInID");

ALTER TABLE ONLY "test_scr1"."Employees"
    ADD CONSTRAINT "Employees_Role_fkey" FOREIGN KEY ("Role") REFERENCES "test_scr1"."Roles"("RoleID");

ALTER TABLE ONLY "test_scr1"."Sales"
    ADD CONSTRAINT "Sales_CustomerID_fkey" FOREIGN KEY ("CustomerID") REFERENCES "test_scr1"."Customers"("CustomerID");

ALTER TABLE ONLY "test_scr1"."Sales"
    ADD CONSTRAINT "Sales_EmployeeID_fkey" FOREIGN KEY ("EmployeeID") REFERENCES "test_scr1"."Employees"("EmployeeID");

ALTER TABLE ONLY "test_scr1"."Sales"
    ADD CONSTRAINT "Sales_FinancingID_fkey" FOREIGN KEY ("FinancingID") REFERENCES "test_scr1"."Financing"("FinancingID");

ALTER TABLE ONLY "test_scr1"."Sales"
    ADD CONSTRAINT "Sales_TradeInID_fkey" FOREIGN KEY ("TradeInID") REFERENCES "test_scr1"."TradeIns"("TradeInID");

ALTER TABLE ONLY "test_scr2"."Employees"
    ADD CONSTRAINT "Employees_Role_fkey" FOREIGN KEY ("Role") REFERENCES "test_scr2"."Roles"("id");

ALTER TABLE ONLY "test_scr2"."Notifications"
    ADD CONSTRAINT "Notifications_Employee_fkey" FOREIGN KEY ("Employee") REFERENCES "test_scr2"."Employees"("id");

ALTER TABLE ONLY "test_scr2"."Notifications"
    ADD CONSTRAINT "Notifications_Sale_fkey" FOREIGN KEY ("Sale") REFERENCES "test_scr2"."Sales"("id");

ALTER TABLE ONLY "test_scr2"."SalesGoals"
    ADD CONSTRAINT "SalesGoals_Assignee_fkey" FOREIGN KEY ("Assignee") REFERENCES "test_scr2"."Employees"("id");

ALTER TABLE ONLY "test_scr2"."SalesGoals"
    ADD CONSTRAINT "SalesGoals_Creator_fkey" FOREIGN KEY ("Creator") REFERENCES "test_scr2"."Employees"("id");

ALTER TABLE ONLY "test_scr2"."Sales"
    ADD CONSTRAINT "Sales_CustomerID_fkey" FOREIGN KEY ("CustomerID") REFERENCES "test_scr2"."Customers"("id");

ALTER TABLE ONLY "test_scr2"."Sales"
    ADD CONSTRAINT "Sales_EmployeeID_fkey" FOREIGN KEY ("EmployeeID") REFERENCES "test_scr2"."Employees"("id");

ALTER TABLE ONLY "test_scr2"."Sales"
    ADD CONSTRAINT "Sales_FinancingID_fkey" FOREIGN KEY ("FinancingID") REFERENCES "test_scr2"."Financing"("id");

ALTER TABLE ONLY "test_scr2"."Sales"
    ADD CONSTRAINT "Sales_TradeInID_fkey" FOREIGN KEY ("TradeInID") REFERENCES "test_scr2"."TradeIns"("id");

ALTER TABLE ONLY "test_scr2"."Tasks"
    ADD CONSTRAINT "Tasks_Assignee_fkey" FOREIGN KEY ("Assignee") REFERENCES "test_scr2"."Employees"("id");

ALTER TABLE ONLY "test_scr2"."Tasks"
    ADD CONSTRAINT "Tasks_Creator_fkey" FOREIGN KEY ("Creator") REFERENCES "test_scr2"."Employees"("id");

ALTER TABLE ONLY "test_scr3"."Employees"
    ADD CONSTRAINT "Employees_Role_fkey" FOREIGN KEY ("Role") REFERENCES "test_scr3"."Roles"("id");

ALTER TABLE ONLY "test_scr3"."Notifications"
    ADD CONSTRAINT "Notifications_Employee_fkey" FOREIGN KEY ("Employee") REFERENCES "test_scr3"."Employees"("id");

ALTER TABLE ONLY "test_scr3"."Notifications"
    ADD CONSTRAINT "Notifications_Sale_fkey" FOREIGN KEY ("Sale") REFERENCES "test_scr3"."Sales"("id");

ALTER TABLE ONLY "test_scr3"."SalesGoals"
    ADD CONSTRAINT "SalesGoals_Assignee_fkey" FOREIGN KEY ("Assignee") REFERENCES "test_scr3"."Employees"("id");

ALTER TABLE ONLY "test_scr3"."SalesGoals"
    ADD CONSTRAINT "SalesGoals_Creator_fkey" FOREIGN KEY ("Creator") REFERENCES "test_scr3"."Employees"("id");

ALTER TABLE ONLY "test_scr3"."Sales"
    ADD CONSTRAINT "Sales_CustomerID_fkey" FOREIGN KEY ("CustomerID") REFERENCES "test_scr3"."Customers"("id");

ALTER TABLE ONLY "test_scr3"."Sales"
    ADD CONSTRAINT "Sales_EmployeeID_fkey" FOREIGN KEY ("EmployeeID") REFERENCES "test_scr3"."Employees"("id");

ALTER TABLE ONLY "test_scr3"."Sales"
    ADD CONSTRAINT "Sales_FinancingID_fkey" FOREIGN KEY ("FinancingID") REFERENCES "test_scr3"."Financing"("id");

ALTER TABLE ONLY "test_scr3"."Sales"
    ADD CONSTRAINT "Sales_TradeInID_fkey" FOREIGN KEY ("TradeInID") REFERENCES "test_scr3"."TradeIns"("id");

ALTER TABLE ONLY "test_scr3"."Tasks"
    ADD CONSTRAINT "Tasks_Assignee_fkey" FOREIGN KEY ("Assignee") REFERENCES "test_scr3"."Employees"("id");

ALTER TABLE ONLY "test_scr3"."Tasks"
    ADD CONSTRAINT "Tasks_Creator_fkey" FOREIGN KEY ("Creator") REFERENCES "test_scr3"."Employees"("id");

ALTER TABLE ONLY "test_scr4"."Employees"
    ADD CONSTRAINT "Employees_Role_fkey" FOREIGN KEY ("Role") REFERENCES "test_scr4"."Roles"("id");

ALTER TABLE ONLY "test_scr4"."Notifications"
    ADD CONSTRAINT "Notifications_Employee_fkey" FOREIGN KEY ("Employee") REFERENCES "test_scr4"."Employees"("id");

ALTER TABLE ONLY "test_scr4"."Notifications"
    ADD CONSTRAINT "Notifications_Sale_fkey" FOREIGN KEY ("Sale") REFERENCES "test_scr4"."Sales"("id");

ALTER TABLE ONLY "test_scr4"."SalesGoals"
    ADD CONSTRAINT "SalesGoals_Creator_fkey" FOREIGN KEY ("Creator") REFERENCES "test_scr4"."Employees"("id");

ALTER TABLE ONLY "test_scr4"."Sales"
    ADD CONSTRAINT "Sales_CustomerID_fkey" FOREIGN KEY ("CustomerID") REFERENCES "test_scr4"."Customers"("id");

ALTER TABLE ONLY "test_scr4"."Sales"
    ADD CONSTRAINT "Sales_EmployeeID_fkey" FOREIGN KEY ("EmployeeID") REFERENCES "test_scr4"."Employees"("id");

ALTER TABLE ONLY "test_scr4"."Sales"
    ADD CONSTRAINT "Sales_FinancingID_fkey" FOREIGN KEY ("FinancingID") REFERENCES "test_scr4"."Financing"("id");

ALTER TABLE ONLY "test_scr4"."Sales"
    ADD CONSTRAINT "Sales_TradeInID_fkey" FOREIGN KEY ("TradeInID") REFERENCES "test_scr4"."TradeIns"("id");

ALTER TABLE ONLY "test_scr4"."Tasks"
    ADD CONSTRAINT "Tasks_Assignee_fkey" FOREIGN KEY ("Assignee") REFERENCES "test_scr4"."Employees"("id");

ALTER TABLE ONLY "test_scr4"."Tasks"
    ADD CONSTRAINT "Tasks_Creator_fkey" FOREIGN KEY ("Creator") REFERENCES "test_scr4"."Employees"("id");

ALTER TABLE ONLY "test_scr5"."Employees"
    ADD CONSTRAINT "Employees_Role_fkey" FOREIGN KEY ("Role") REFERENCES "test_scr5"."Roles"("id");

ALTER TABLE ONLY "test_scr5"."Notifications"
    ADD CONSTRAINT "Notifications_Employee_fkey" FOREIGN KEY ("Employee") REFERENCES "test_scr5"."Employees"("id");

ALTER TABLE ONLY "test_scr5"."Notifications"
    ADD CONSTRAINT "Notifications_Sale_fkey" FOREIGN KEY ("Sale") REFERENCES "test_scr5"."Sales"("id");

ALTER TABLE ONLY "test_scr5"."SalesGoals"
    ADD CONSTRAINT "SalesGoals_Creator_fkey" FOREIGN KEY ("Creator") REFERENCES "test_scr5"."Employees"("id");

ALTER TABLE ONLY "test_scr5"."Sales"
    ADD CONSTRAINT "Sales_CustomerID_fkey" FOREIGN KEY ("CustomerID") REFERENCES "test_scr5"."Customers"("id");

ALTER TABLE ONLY "test_scr5"."Sales"
    ADD CONSTRAINT "Sales_EmployeeID_fkey" FOREIGN KEY ("EmployeeID") REFERENCES "test_scr5"."Employees"("id");

ALTER TABLE ONLY "test_scr5"."Sales"
    ADD CONSTRAINT "Sales_FinancingID_fkey" FOREIGN KEY ("FinancingID") REFERENCES "test_scr5"."Financing"("id");

ALTER TABLE ONLY "test_scr5"."Sales"
    ADD CONSTRAINT "Sales_TradeInID_fkey" FOREIGN KEY ("TradeInID") REFERENCES "test_scr5"."TradeIns"("id");

ALTER TABLE ONLY "test_scr5"."Tasks"
    ADD CONSTRAINT "Tasks_Assignee_fkey" FOREIGN KEY ("Assignee") REFERENCES "test_scr5"."Employees"("id");

ALTER TABLE ONLY "test_scr5"."Tasks"
    ADD CONSTRAINT "Tasks_Creator_fkey" FOREIGN KEY ("Creator") REFERENCES "test_scr5"."Employees"("id");

ALTER TABLE "public"."Customers" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."Employees" ENABLE ROW LEVEL SECURITY;

CREATE POLICY "Enable all access for all authenticated users -- tmp" ON "public"."Customers" TO "authenticated" USING (true) WITH CHECK (true);

CREATE POLICY "Enable all access for all authenticated users -- tmp" ON "public"."Financing" TO "authenticated" USING (true) WITH CHECK (true);

CREATE POLICY "Enable all access for all authenticated users -- tmp" ON "public"."MonthlySales" TO "authenticated" USING (true) WITH CHECK (true);

CREATE POLICY "Enable all access for all users -- tmp" ON "public"."Sales" TO "authenticated" USING (true) WITH CHECK (true);

CREATE POLICY "Enable all access for all users -- tmp" ON "public"."SalesGoals" TO "authenticated" USING (true) WITH CHECK (true);

CREATE POLICY "Enable all for auth users -- tmp - need employee reference?" ON "public"."Roles" TO "authenticated" USING (true) WITH CHECK (true);

CREATE POLICY "Enable delete for users based on Creator | Assignee -- temp?" ON "public"."Tasks" FOR DELETE TO "authenticated" USING ((("auth"."uid"() = "Creator") OR ("auth"."uid"() = "Assignee")));

CREATE POLICY "Enable insert for authenticated users only" ON "public"."Sales" FOR INSERT TO "authenticated" WITH CHECK (true);

CREATE POLICY "Enable insert for authenticated users only" ON "public"."TradeIns" FOR INSERT TO "authenticated" WITH CHECK (true);

CREATE POLICY "Enable insert for authenticated users to insert for themselves." ON "public"."Tasks" FOR INSERT TO "authenticated" WITH CHECK (("Creator" = "auth"."uid"()));

CREATE POLICY "Enable read access for all authenticated users" ON "public"."Employees" FOR SELECT TO "authenticated" USING (true);

CREATE POLICY "Enable read access for all authenticated users --tmp" ON "public"."Tasks" FOR SELECT TO "authenticated" USING (true);

CREATE POLICY "Enable read access for all users of their own sales." ON "public"."Sales" FOR SELECT TO "authenticated" USING (("auth"."uid"() = "EmployeeID"));

CREATE POLICY "Enable read for authenticated users only" ON "public"."TradeIns" FOR SELECT TO "authenticated" USING (true);

CREATE POLICY "Enable read for users based on user_id" ON "public"."Notifications" FOR SELECT TO "authenticated" USING (("auth"."uid"() = "Employee"));

CREATE POLICY "Enable update for authenticated users only" ON "public"."TradeIns" FOR UPDATE TO "authenticated" USING (true) WITH CHECK (true);

CREATE POLICY "Enable update for users based on their creator" ON "public"."Tasks" FOR UPDATE TO "authenticated" USING (("auth"."uid"() = "Creator")) WITH CHECK (("auth"."uid"() = "Creator"));

CREATE POLICY "Enable update for users if authenticated" ON "public"."Sales" FOR UPDATE TO "authenticated" USING (true) WITH CHECK (true);

ALTER TABLE "public"."Financing" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."MonthlySales" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."Notifications" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."ReferencePages" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."Roles" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."SalesGoals" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."Tasks" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."TradeIns" ENABLE ROW LEVEL SECURITY;

GRANT USAGE ON SCHEMA "public" TO "postgres";
GRANT USAGE ON SCHEMA "public" TO "anon";
GRANT USAGE ON SCHEMA "public" TO "authenticated";
GRANT USAGE ON SCHEMA "public" TO "service_role";

GRANT ALL ON FUNCTION "public"."create_new_sale"("sale" "jsonb") TO "anon";
GRANT ALL ON FUNCTION "public"."create_new_sale"("sale" "jsonb") TO "authenticated";
GRANT ALL ON FUNCTION "public"."create_new_sale"("sale" "jsonb") TO "service_role";

GRANT ALL ON FUNCTION "public"."handle_new_user"() TO "anon";
GRANT ALL ON FUNCTION "public"."handle_new_user"() TO "authenticated";
GRANT ALL ON FUNCTION "public"."handle_new_user"() TO "service_role";

GRANT ALL ON TABLE "public"."Customers" TO "anon";
GRANT ALL ON TABLE "public"."Customers" TO "authenticated";
GRANT ALL ON TABLE "public"."Customers" TO "service_role";

GRANT ALL ON SEQUENCE "public"."Customers_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."Customers_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."Customers_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."Employees" TO "anon";
GRANT ALL ON TABLE "public"."Employees" TO "authenticated";
GRANT ALL ON TABLE "public"."Employees" TO "service_role";

GRANT ALL ON TABLE "public"."Financing" TO "anon";
GRANT ALL ON TABLE "public"."Financing" TO "authenticated";
GRANT ALL ON TABLE "public"."Financing" TO "service_role";

GRANT ALL ON SEQUENCE "public"."Financing_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."Financing_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."Financing_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."MonthlySales" TO "anon";
GRANT ALL ON TABLE "public"."MonthlySales" TO "authenticated";
GRANT ALL ON TABLE "public"."MonthlySales" TO "service_role";

GRANT ALL ON SEQUENCE "public"."MonthlySales_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."MonthlySales_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."MonthlySales_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."Notifications" TO "anon";
GRANT ALL ON TABLE "public"."Notifications" TO "authenticated";
GRANT ALL ON TABLE "public"."Notifications" TO "service_role";

GRANT ALL ON SEQUENCE "public"."Notifications_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."Notifications_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."Notifications_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."ReferencePages" TO "anon";
GRANT ALL ON TABLE "public"."ReferencePages" TO "authenticated";
GRANT ALL ON TABLE "public"."ReferencePages" TO "service_role";

GRANT ALL ON SEQUENCE "public"."ReferencePages_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."ReferencePages_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."ReferencePages_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."Roles" TO "anon";
GRANT ALL ON TABLE "public"."Roles" TO "authenticated";
GRANT ALL ON TABLE "public"."Roles" TO "service_role";

GRANT ALL ON SEQUENCE "public"."Roles_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."Roles_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."Roles_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."Sales" TO "anon";
GRANT ALL ON TABLE "public"."Sales" TO "authenticated";
GRANT ALL ON TABLE "public"."Sales" TO "service_role";

GRANT ALL ON TABLE "public"."SalesGoals" TO "anon";
GRANT ALL ON TABLE "public"."SalesGoals" TO "authenticated";
GRANT ALL ON TABLE "public"."SalesGoals" TO "service_role";

GRANT ALL ON SEQUENCE "public"."SalesGoals_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."SalesGoals_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."SalesGoals_id_seq" TO "service_role";

GRANT ALL ON SEQUENCE "public"."Sales_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."Sales_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."Sales_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."Tasks" TO "anon";
GRANT ALL ON TABLE "public"."Tasks" TO "authenticated";
GRANT ALL ON TABLE "public"."Tasks" TO "service_role";

GRANT ALL ON SEQUENCE "public"."Tasks_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."Tasks_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."Tasks_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."TradeIns" TO "anon";
GRANT ALL ON TABLE "public"."TradeIns" TO "authenticated";
GRANT ALL ON TABLE "public"."TradeIns" TO "service_role";

GRANT ALL ON SEQUENCE "public"."TradeIns_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."TradeIns_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."TradeIns_id_seq" TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "service_role";

RESET ALL;
