from itertools import chain

from main import SCHEMA_NAME, ENABLE_COMMITS


def build_mysql_output(tables_list):
    """Chain output for faster results"""
    output = [*chain(*([obj.mysql() for obj in table] for table in tables_list))]
    return ["BEGIN;"] + output + ["COMMIT;"] if ENABLE_COMMITS else output


def build_mysql_schema():
    # generated from dbml2sql --mysql schema.dbml
    return f"""
CREATE SCHEMA {SCHEMA_NAME};
USE {SCHEMA_NAME};
CREATE TABLE `Sales` (
  `SaleID` integer PRIMARY KEY AUTO_INCREMENT,
  `StockNumber` varchar(255) NOT NULL,
  `VehicleMake` varchar(255) NOT NULL,
  `ActualCashValue` decimal(10,2) NOT NULL,
  `GrossProfit` decimal(10,2) NOT NULL,
  `FinAndInsurance` decimal(10,2) NOT NULL,
  `Holdback` decimal(10,2) NOT NULL,
  `Total` decimal(10,2) NOT NULL,
  `SaleTime` timestamp DEFAULT (now()),
  `EmployeeID` int NOT NULL,
  `CustomerID` int NOT NULL,
  `FinancingID` int,
  `TradeInID` int
);

CREATE TABLE `MonthlySales` (
  `MonthlySaleID` int PRIMARY KEY AUTO_INCREMENT,
  `TimePeriod` timestamp,
  `GrossProfit` decimal(10,2),
  `FinAndInsurance` decimal(10,2),
  `Holdback` decimal(10,2),
  `Total` decimal(10,2)
);

CREATE TABLE `Roles` (
  `RoleID` int PRIMARY KEY AUTO_INCREMENT,
  `RoleName` varchar(255),
  `ReadPermission` boolean DEFAULT false,
  `WritePermission` boolean DEFAULT false,
  `ModifyPermission` boolean DEFAULT false,
  `EmployeePermission` boolean DEFAULT false,
  `DatabasePermission` boolean DEFAULT false
);

CREATE TABLE `Employees` (
  `EmployeeID` int PRIMARY KEY AUTO_INCREMENT,
  `Name` varchar(255) NOT NULL,
  `EmployeeNumber` varchar(255) NOT NULL,
  `Password` TEXT NOT NULL,
  `Role` int NOT NULL,
  `CreatedOn` timestamp DEFAULT (now()),
  `LastAccessed` timestamp DEFAULT (now())
);

CREATE TABLE `Customers` (
  `CustomerID` int PRIMARY KEY AUTO_INCREMENT,
  `Name` varchar(255) NOT NULL,
  `City` varchar(255) NOT NULL
);

CREATE TABLE `Financing` (
  `FinancingID` int PRIMARY KEY AUTO_INCREMENT,
  `Method` varchar(255) UNIQUE NOT NULL
);

CREATE TABLE `TradeIns` (
  `TradeInID` int PRIMARY KEY AUTO_INCREMENT,
  `Trade` varchar(255) NOT NULL,
  `ActualCashValue` decimal(10,2) NOT NULL
);

CREATE TABLE `Tasks` (
  `TaskID` int PRIMARY KEY AUTO_INCREMENT,
  `Name` varchar(255) NOT NULL,
  `Description` TEXT,
  `PercentageComplete` decimal(3,2),
  `DateIssued` timestamp DEFAULT (now()),
  `Assignee` int,
  `Creator` int
);

CREATE TABLE `Notifications` (
  `NotificationID` int PRIMARY KEY AUTO_INCREMENT,
  `EmployeeID` int NOT NULL,
  `SalesID` int NOT NULL
);

ALTER TABLE `Sales` ADD FOREIGN KEY (`EmployeeID`) REFERENCES `Employees` (`EmployeeID`);

ALTER TABLE `Sales` ADD FOREIGN KEY (`CustomerID`) REFERENCES `Customers` (`CustomerID`);

ALTER TABLE `Sales` ADD FOREIGN KEY (`FinancingID`) REFERENCES `Financing` (`FinancingID`);

ALTER TABLE `Sales` ADD FOREIGN KEY (`TradeInID`) REFERENCES `TradeIns` (`TradeInID`);

ALTER TABLE `Employees` ADD FOREIGN KEY (`Role`) REFERENCES `Roles` (`RoleID`);

ALTER TABLE `Tasks` ADD FOREIGN KEY (`Assignee`) REFERENCES `Employees` (`EmployeeID`);

ALTER TABLE `Tasks` ADD FOREIGN KEY (`Creator`) REFERENCES `Employees` (`EmployeeID`);

ALTER TABLE `Notifications` ADD FOREIGN KEY (`EmployeeID`) REFERENCES `Employees` (`EmployeeID`);

ALTER TABLE `Notifications` ADD FOREIGN KEY (`SalesID`) REFERENCES `Sales` (`SaleID`);
""".split("\n")


def build_postgresql_output(tables_list):
    """Chain output for faster results. Same as build_mysql_output for now."""
    output = [*chain(*([obj.postgresql() for obj in table] for table in tables_list))]
    return ["BEGIN;"] + output + ["COMMIT;"] if ENABLE_COMMITS else output


def build_postgresql_schema():
    # generated from dbml2sql --postgresql schema.dbml
    return f"""
CREATE SCHEMA {SCHEMA_NAME};
SET search_path TO {SCHEMA_NAME};
CREATE TABLE "Sales" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "StockNumber" varchar(255) NOT NULL,
  "VehicleMake" varchar(255) NOT NULL,
  "ActualCashValue" decimal(10,2) NOT NULL,
  "GrossProfit" decimal(10,2) NOT NULL,
  "FinAndInsurance" decimal(10,2) NOT NULL,
  "Holdback" decimal(10,2) NOT NULL,
  "Total" decimal(10,2) NOT NULL,
  "SaleTime" timestamp DEFAULT (now()),
  "EmployeeID" int NOT NULL,
  "CustomerID" int NOT NULL,
  "FinancingID" int,
  "TradeInID" int
);

CREATE TABLE "MonthlySales" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "TimePeriod" timestamp,
  "GrossProfit" decimal(10,2),
  "FinAndInsurance" decimal(10,2),
  "Holdback" decimal(10,2),
  "Total" decimal(10,2)
);

CREATE TABLE "Roles" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "RoleName" varchar(255),
  "ReadPermission" boolean DEFAULT false,
  "WritePermission" boolean DEFAULT false,
  "ModifyPermission" boolean DEFAULT false,
  "EmployeePermission" boolean DEFAULT false,
  "DatabasePermission" boolean DEFAULT false
);

CREATE TABLE "Employees" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "Name" varchar(255) NOT NULL,
  "EmployeeNumber" varchar(255) NOT NULL,
  "Password" TEXT NOT NULL,
  "Role" int NOT NULL,
  "CreatedOn" timestamp DEFAULT (now()),
  "LastAccessed" timestamp DEFAULT (now())
);

CREATE TABLE "Customers" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "Name" varchar(255) NOT NULL,
  "City" varchar(255) NOT NULL
);

CREATE TABLE "Financing" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "Method" varchar(255) UNIQUE NOT NULL
);

CREATE TABLE "TradeIns" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "Trade" varchar(255) NOT NULL,
  "ActualCashValue" decimal(10,2) NOT NULL
);

CREATE TABLE "Tasks" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "Name" varchar(255) NOT NULL,
  "Description" TEXT,
  "PercentageComplete" decimal(3,2),
  "DateIssued" timestamp DEFAULT (now()),
  "Assignee" int,
  "Creator" int
);

CREATE TABLE "SalesGoals" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "Name" varchar(255),
  "Description" TEXT,
  "Assignee" int,
  "Creator" int,
  "GoalTime" timestamp,
  "TotalGoal" decimal(10,2)
);

CREATE TABLE "Notifications" (
  "id" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "Employee" int NOT NULL,
  "Sale" int NOT NULL
);

ALTER TABLE "Sales" ADD FOREIGN KEY ("EmployeeID") REFERENCES "Employees" ("id");

ALTER TABLE "Sales" ADD FOREIGN KEY ("CustomerID") REFERENCES "Customers" ("id");

ALTER TABLE "Sales" ADD FOREIGN KEY ("FinancingID") REFERENCES "Financing" ("id");

ALTER TABLE "Sales" ADD FOREIGN KEY ("TradeInID") REFERENCES "TradeIns" ("id");

ALTER TABLE "Employees" ADD FOREIGN KEY ("Role") REFERENCES "Roles" ("id");

ALTER TABLE "Tasks" ADD FOREIGN KEY ("Assignee") REFERENCES "Employees" ("id");

ALTER TABLE "Tasks" ADD FOREIGN KEY ("Creator") REFERENCES "Employees" ("id");

ALTER TABLE "SalesGoals" ADD FOREIGN KEY ("Assignee") REFERENCES "Employees" ("id");

ALTER TABLE "SalesGoals" ADD FOREIGN KEY ("Creator") REFERENCES "Employees" ("id");

ALTER TABLE "Notifications" ADD FOREIGN KEY ("Employee") REFERENCES "Employees" ("id");

ALTER TABLE "Notifications" ADD FOREIGN KEY ("Sale") REFERENCES "Sales" ("id");
""".split("\n")
