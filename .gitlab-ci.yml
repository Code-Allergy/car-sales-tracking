qodana:
  only:
    - main
    - bill
    - merge_requests
  image:
    name: jetbrains/qodana-js
    entrypoint: [""]
  variables:
    QODANA_TOKEN: $qodana_token
  script:
    - qodana --save-report --results-dir=$CI_PROJECT_DIR/.qodana

stages:
  - deploy
  - build_typedoc
  - build_dbdocs
  - teardown

deploy_generic_preview:
  stage: deploy
  except:
    - main
    - dev
    - alex
    - amir
    - bill
    - rudra
    - ryan
    - suchetan
    - tolu

  script:
    - vercel pull --yes --environment=preview --token=$VERCEL_TOKEN
    - vercel build --token=$VERCEL_TOKEN
    - DEPLOY_URL=$(vercel deploy --prebuilt  --token=$VERCEL_TOKEN)
    - echo "DEPLOY_URL=$DEPLOY_URL" >> deploy.env
  artifacts:
    reports:
      dotenv: deploy.env
  environment:
    name: "$CI_COMMIT_REF_SLUG"
    url: $DEPLOY_URL
    on_stop: end_deployment
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - node_modules/
      - .next/cache/

deploy_user_preview:
  stage: deploy
  only:
    - dev
    - alex
    - amir
    - bill
    - rudra
    - ryan
    - suchetan
    - tolu

  script:
    - vercel pull --yes --environment=production --token=$VERCEL_TOKEN
    - vercel build --token=$VERCEL_TOKEN
    - vercel deploy --prebuilt  --token=$VERCEL_TOKEN > deploy.env 2>error.txt
    - code=$?
    - if [ $code -eq 0 ]; then
    - deploymentUrl=`cat deploy.env`
    - vercel alias $deploymentUrl ${CI_COMMIT_REF_SLUG}.codeallergy.dev --token=$VERCEL_TOKEN
    - else
    - errorMessage=`cat error.txt`
    - echo "Error occurred with deployment $errorMessage"
    - fi

deploy_production:
  stage: deploy
  only:
    - main
  script:
    - vercel pull --yes --environment=production --token=$VERCEL_TOKEN
    - vercel build --prod --token=$VERCEL_TOKEN
    - DEPLOY_URL=$(vercel deploy --prebuilt --prod --token=$VERCEL_TOKEN)
    - echo "DEPLOY_URL=$DEPLOY_URL" >> deploy.env
  artifacts:
    reports:
      dotenv: deploy.env
  environment:
    name: "$CI_COMMIT_REF_SLUG"
    url: $DEPLOY_URL
    on_stop: end_deployment
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - node_modules/
      - .next/cache/

generate_typedoc_info:
  stage: build_typedoc
  only:
    - main
  script:
    - npm install
    - npm run docs
    - rm -rf /var/www/docs/*
    - cp -r docs/* /var/www/docs
  # environment:
  #   name: "Documentation"
  #   url: https://docs.codeallergy.dev

generate_dbdocs_info:
  stage: build_dbdocs
  script:
    - dbdocs build src/data/database_schema.dbml --project="370 Binary Bandits"
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
      changes:
        - "src/data/database_schema.dbml"


# don't bother removing old ones from vercel, just remove from gitlab
end_deployment:
  stage: teardown
  script:
    - echo "Removing environment. $CI_COMMIT_REF_SLUG"
  when: manual
  environment:
    name: "$CI_COMMIT_REF_SLUG"
    action: stop
